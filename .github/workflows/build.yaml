name: Create a release

on:
  workflow_dispatch:
    inputs:
      package_version:
        type: string
        description: opencv-python-headless version to build
        default: 4.12.0.88
        required: true

      python_version:
        type: string
        description: python version
        default: '3.11'
        required: true

      ffmpeg_version:
        type: string
        description: ffmpeg version
        default: '7.1'
        required: true

permissions:
  contents: read

jobs:
  build-opencv:
    name: build opencv-python-headless
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ inputs.python_version }}

      - name: get ffmpeg
        run: |
          wget -qO ffmpeg.tar.xz "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-n${version}-latest-linux64-gpl-shared-${version}.tar.xz"
          mkdir ffmpeg
          tar xf ffmpeg.tar.xz -C ffmpeg --strip-components 1
        env:
          version: ${{ inputs.ffmpeg_version }}

      - name: install deps
        run: |
          sudo apt-get -qq -o=Dpkg::Use-Pty=0 update \
          && sudo apt-get -qq -o=Dpkg::Use-Pty=0 install -y --no-install-recommends \
              build-essential pkg-config \
              libavformat-dev libavcodec-dev libswscale-dev \
              libblas-dev liblapack-dev
      - name: build from sdist
        run: |
          pname=opencv-python-headless

          uv venv --python "$pyversion"
          . .venv/bin/activate
          uv pip install pip
          pip download "$pname==$version" --no-binary "$pname"

          mkdir "$pname"
          tar xzf "$pname"*.tar.gz -C "$pname" --strip-components 1

          cd "$pname"
          uv pip install setuptools numpy scikit-build
          export CMAKE_ARGS="-DWITH_FFMPEG=ON \
            -DBUILD_OPENCV_highgui=OFF \
            -DWITH_GTK=OFF \
            -DBUILD_JAVA=OFF \
            -DBUILD_TESTS=OFF \
            -DBUILD_PERF_TESTS=OFF \
            -DBUILD_EXAMPLES=OFF \
            -DBUILD_opencv_apps=OFF"
          uv build --wheel --no-build-isolation
        env:
          version: ${{ inputs.package_version }}
          pyversion: ${{ inputs.python_version }}

      - name: push a release
        run: |
          tag="auto-$(date +'%Y-%m-%d-%H-%M')"
          gh release create "$tag" --target master --latest --title "$tag" ffmpeg.tar.xz opencv-python-headless/dist/*.whl
        env:
          GITHUB_TOKEN: ${{ github.token }}
